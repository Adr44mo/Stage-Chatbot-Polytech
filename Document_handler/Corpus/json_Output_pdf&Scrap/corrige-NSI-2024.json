{
  "source": "scraped_geipi",
  "file_name": "corrige-NSI-2024.pdf",
  "pdf_path": "/home/adrien/Documents/poly4emeAnee/Projet-Stage/Projet-Chatbot/Document_handler/scraping/data_sites/geipi_polytech/pdf_scrapes/corrige-NSI-2024.pdf",
  "specialty": "NA",
  "content": "1 / 2 Document réponse du sujet de Numérique et Sciences Informatiques I-1. Ordre 1 : (r1), (r2), (r3), (r4), (r5) £ pas d’erreur Q erreur à utiliser seulement si vous vous êtes trompé au-dessus £ pas d’erreur £ erreur Ordre 2 : (r1), (r5), (r4), (r3), (r2) Q pas d’erreur £ erreur à utiliser seulement si vous vous êtes trompé au-dessus £ pas d’erreur £ erreur Ordre 3 : (r2), (r3), (r4), (r5), (r1) £ pas d’erreur Q erreur à utiliser seulement si vous vous êtes trompé au-dessus £ pas d’erreur £ erreur Ordre 4 : (r5), (r1), (r4), (r2), (r3) Q pas d’erreur £ erreur à utiliser seulement si vous vous êtes trompé au-dessus £ pas d’erreur £ erreur I-2. (a) Le résultat ne peut pas être vide ; la table ingredient contient au moins un enregistrement et la contrainte de clé étrangère impose que la valeur de l’attribut ingredient.id_plat existe parmi les valeurs de l’attribut plat.id_plat. ....................................................................................................................................................... (b) Le résultat ne peut pas être vide ; la table ingredient contient au moins un enregistrement et toute valeur de ingredient.id_plat doit exister avant à un ajout dans la table ingredient parmi les valeurs de l’attribut plat.id_plat du fait de la contrainte de clé étrangère. .......................... I-3. …1… ingredient ............................................................ …2… = ......................... …3… OR .................. …4… JOIN analysenutri ON ingredient.id_ingr = analysenutri.id_ingr ... I-4. …1… ingredient ...................................................... …2… ingredient.id_plat ............................... …3… analysenutri ................................................................................................................................................................ …4… ingredient.id_ingr = analysenutri.id_ingr .......................................................................... I-5. …1… { 'glucides' : 0, 'lipides' : 0, 'proteines' : 0 } .................................................................... …2… res[ k ] .......................... …3… anutri[ k ] .................. …4… comp .............................. 2 / 2 II-1. …1… { } ........................................ …2… p2 ........................................ …3… p1 ....................................... …4… arcs_sortants .......................................... …5… ( p2, n, d ) ..................................................... II-2. …1… inf .............................................................................. …2… poids .................................................................... …3… min .......................................................................... …4… proche ............................................................... …5… p ................................................................................. …6… proche ............................................................... II-3. def meilleur_chemin(base,depart,arrivee): arcs = creer_dico_arcs_sortants(base) a_visiter = {p: (inf, '', '') for p in arcs.keys()} a_visiter[depart] = ( 0, '', '' ) ......................................................................................................................... visites = { } ......................................................................................................................................................................... while a_visiter != { } ......................................................................................................................................... : # recherche du sommet suivant à visiter p = plus_proche( a_visiter ) ............................................................................................................... (dist,precedent,sentier) = a_visiter[p] # m-à-j des voisins de p restant à visiter for (suivant,n,d) in arcs[ p ] ........................................................................................................ : if suivant ................................................................................................................ in a_visiter : (min,prec,sent) = a_visiter[ suivant ] ..................................................................... poids = d ................................................................................................................................... + dist if poids ....................................... < min .................................................................................... : a_visiter[suivant]=( poids ...................................................................................... , p ................................................................................................... , n .................................................................................................. ) # p passe des sommets à visiter aux sommets visités visites[p] = a_visiter[p] del a_visiter[p] affichage(visites, depart, arrivee) II-4. 1 ligne 6 ............................................................................ 2 ligne 12 ........................................................................ 3 ligne 11 ........................................................................ 4 ligne 10 ........................................................................",
  "metadata": {
    "title": "corrige-NSI-2024.pdf",
    "auteurs": [],
    "date": null,
    "title_2": "Corrige NSI 2024",
    "url": "https://www.geipi-polytech.org/annales-du-concours-geipi-polytech/",
    "last_modified": "2024-05-02T07:24:58",
    "hash": "ab0161f3dd989f2d8ca513ae9e060fa89bd02ee3e079074ed4cf19f8b2ed5396",
    "scraped_at": "2025-06-18T11:03:15.043484"
  }
}