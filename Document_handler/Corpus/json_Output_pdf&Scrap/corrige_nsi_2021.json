{
  "source": "scraped_geipi",
  "file_name": "corrige_nsi_2021.pdf",
  "pdf_path": "/home/adrien/Documents/poly4emeAnee/Projet-Stage/Projet-Chatbot/Document_handler/scraping/data_sites/geipi_polytech/pdf_scrapes/corrige_nsi_2021.pdf",
  "specialty": "NA",
  "content": "1 / 2 I-1- def creer_file (): return __________ I-2- def est_vide(F): return ______________________ I-3- def enfiler(F, x): F. __________________ (x) I-4- def defiler(F): return F.pop( ________________ ) I-5- 1-1 ; 2-1 ; I-6- 1 2 3 I-7- 1 ____________________________________________________________________ 2 ____________________________________________________________________ 3 ____________________________________________________________________ 4 ____________________________________________________________________ II-1- II-2- II-3- II-4- [ ] len ( F ) == 0 append 0 3-1 ; 1-2 ; 2-2 ; 3-2 ; 1-3 ; 3-3 ; 3-4 x [ ’temps’ ] + 1 x [ ’temps’ ] < x [ ’duree’ ] enfiler ( F, x ) proc = creer_file() enfiler ( proc, { ’id’ : 1, ’duree’ : 3, ’temps’ : 0 } ) enfiler ( proc, { ’id’ : 2, ’duree’ : 2, ’temps’ : 0 } ) enfiler ( proc, { ’id’ : 3, ’duree’ : 4, ’temps’ : 0 } ) INSERT INTO films VALUES ( 3849393, ’Matrix’, 1999 ); INSERT INTO realisation VALUES ( 3849393, ’Andy Wachowski ’ ), ( 3849393, ’Larry Wachowski ’ ); 7 SELECT titre FROM films WHERE annee >= 2000 AND annee < 2010 ; SELECT titre, annee FROM films JOIN realisation WHERE films.idfilm = realisation.idfilm AND nom = ’Peter Pactol ’ ; 2 / 2 II-5- for ____________________ in ____________________________________________: for ____________________ in _________________________________________: if ________________________________________________________________: print(film['idfilm'], film['titre'], film['annee'], real['nom']) II-6- def contient_id(films, idfilm): for f in films: if _________________________________________________________________: return _________________________________________________________ return ________________________________________________________________ II-7- 1 2 3 II-8- 3 if not contient_id_rec(films, r['idfilm'], _________________________ ): II-9- 4 III-1- L1 = [ 1, 2, 3, 4 ] L3 = [ 2, 1, 4, 3 ] L5 = [ 9, 5, 4, 2, 3, 2 ] L2 = [ 4, 3, 2, 1 ] L4 = [ 3, 4, 1, 2 ] L6 = [ 8, 3, 4, 1, 2, 3 ] Quelles listes représentent un tas : q L1 q L2 q L3 q L4 q L5 q L6 III-2- def parent(i): return ___________________ III-3- def est_feuille(T, i): return __________________________ III-4- 1 2 3 4 III-5- 5 6 7 real liste_reals film liste_films real [ ’idfilm’ ] == film [ ’idfilm’ ] f [ ’idfilm’ ] == idfilm True False contient_id_rec (liste, id, pivot + 1, imax ) contient_id_rec (liste, id, imin, pivot - 1 ) True 0 , len ( films ) – 1 { f [ ’idfilm’ ] : f for f in films } x x x ( i – 1 ) // 2 gauche ( i ) >= len ( T ) T [ droite ( i ) ] droite ( i ) T [ j ] > T [ i ] descendre ( T, j ) 0 0 descendre ( T, 0 )",
  "metadata": {
    "title": "GEIPI-POLYTECH 2021 NSI corrige page 1",
    "auteurs": [],
    "date": null,
    "title_2": "Corrige nsi 2021",
    "url": "https://www.geipi-polytech.org/annales-du-concours-geipi-polytech/",
    "last_modified": "2021-05-02T20:47:54",
    "hash": "5c6b51c7584ffbc936a9f48dbf9c0bebe1ee994b56ddc52c67776538f2a5ae39",
    "scraped_at": "2025-06-18T11:03:23.035796"
  }
}